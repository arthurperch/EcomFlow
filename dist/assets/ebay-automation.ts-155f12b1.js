(function(){console.log("eBay automation content script loaded on:",window.location.href);function g(e){const t=e.match(/\/dp\/([A-Z0-9]{10})|\/gp\/product\/([A-Z0-9]{10})|\/ASIN\/([A-Z0-9]{10})/i);return t?t[1]||t[2]||t[3]:null}async function p(e){try{const t=g(e);return console.log("Extracted ASIN:",t),{amazonUrl:e,asin:t||void 0,title:`Product from ${e}`,description:`Amazon ASIN: ${t}
Source: ${e}`,price:"",imageUrl:""}}catch(t){return console.error("Error fetching Amazon data:",t),{amazonUrl:e}}}async function m(e){var a;console.log("Auto-filling eBay form with:",e),await new Promise(r=>setTimeout(r,2e3));const t=((a=e.listType)==null?void 0:a.toUpperCase())||"STANDARD";console.log(`Using ${t}-List mode`);const i=['input[name*="title"]','input[id*="title"]','textarea[name*="title"]','input[placeholder*="title" i]',"#listings\\.title"];for(const r of i){const o=document.querySelector(r);if(o&&e.title){o.value=e.title,o.dispatchEvent(new Event("input",{bubbles:!0})),o.dispatchEvent(new Event("change",{bubbles:!0})),console.log("✓ Title filled:",e.title);break}}const n=['textarea[name*="description"]','textarea[id*="description"]','div[contenteditable="true"]','iframe[id*="description"]',"#listings\\.description"];for(const r of n){const o=document.querySelector(r);if(o&&e.description){o.tagName==="TEXTAREA"?(o.value=e.description,o.dispatchEvent(new Event("input",{bubbles:!0})),o.dispatchEvent(new Event("change",{bubbles:!0}))):o.tagName==="DIV"&&(o.innerText=e.description,o.dispatchEvent(new Event("input",{bubbles:!0}))),console.log("✓ Description filled");break}}const l=`

[${t}-List] Source: ${e.amazonUrl}`,s=document.querySelector('textarea[name*="description"]');s&&(s.value+=l,s.dispatchEvent(new Event("input",{bubbles:!0}))),console.log(`✓ eBay form auto-fill complete (${e.index+1}/${e.total})`)}(async function(){if(!window.location.href.includes("ebay.com/sell")&&!window.location.href.includes("ebay.com/list")){console.log("Not on eBay listing page, skipping automation");return}console.log("On eBay listing page, checking for pending automation..."),await new Promise(t=>setTimeout(t,1500)),chrome.storage.local.get(["automationInProgress","pendingUrls"],async t=>{if(!t.automationInProgress){console.log("No automation in progress");return}console.log("Automation in progress, looking for product data..."),chrome.storage.local.get(null,async i=>{for(let n=0;n<100;n++){const l=`pendingProduct_${n}`;if(i[l]&&!i[`processed_${n}`]){const s=i[l];console.log(`Found product data at index ${n}:`,s);const a=await p(s.amazonUrl),r={...s,...a};await m(r),await chrome.storage.local.set({[`processed_${n}`]:!0});const o=i.pendingUrls||[];let d=!0;for(let c=0;c<o.length;c++)if(!i[`processed_${c}`]){d=!1;break}if(d){console.log("All products processed, cleaning up...");const c=["automationInProgress","pendingUrls"];for(let u=0;u<o.length;u++)c.push(`pendingProduct_${u}`),c.push(`processed_${u}`);chrome.storage.local.remove(c)}break}}})})})();
})()
