console.log("🤖 Automation Commands Handler loaded");async function executeCommand(t){console.log(`⚡ Executing: ${t.type}`,t.target);try{switch(t.type){case"click":return await autoClick(t.target,t.options);case"type":return await autoType(t.target,t.value,t.options);case"scroll":return await autoScroll(t.target||null,t.value,t.options);case"wait":return await autoWait(t.value,t.options);case"navigate":return await autoNavigate(t.value);case"extract":return await autoExtract(t.target,t.options);case"custom":return await executeCustomCommand(t);default:throw new Error(`Unknown command type: ${t.type}`)}}catch(e){throw console.error("❌ Command failed:",e),e}}async function autoClick(t,e={}){const{waitForElement:r=5e3,highlight:i=!0,scrollIntoView:n=!0,multiple:o=!1}=e,c=await r?await waitForSelector(t,r):document.querySelector(t);if(!c)throw new Error(`Element not found: ${t}`);if(o){const a=document.querySelectorAll(t);for(const l of a)await clickElement(l,{highlight:i,scrollIntoView:n}),await delay(300);return!0}return await clickElement(c,{highlight:i,scrollIntoView:n})}async function clickElement(t,e={}){const{highlight:r=!0,scrollIntoView:i=!0}=e;try{if(i&&(t.scrollIntoView({behavior:"smooth",block:"center"}),await delay(500)),r){const n=t.style.backgroundColor,o=t.style.border;t.style.backgroundColor="#90EE90",t.style.border="3px solid #00FF00",t.style.transition="all 0.3s",await delay(300),t.style.backgroundColor=n,t.style.border=o}return t.click(),t.dispatchEvent(new MouseEvent("click",{bubbles:!0,cancelable:!0,view:window})),console.log("✓ Clicked:",t),!0}catch(n){throw console.error("Click failed:",n),n}}async function autoType(t,e,r={}){const{waitForElement:i=5e3,clearFirst:n=!0,typingDelay:o=50,triggerEvents:c=!0}=r,a=await waitForSelector(t,i);if(!a)throw new Error(`Element not found: ${t}`);try{a.focus(),await delay(100),n&&(a.value="",a.dispatchEvent(new Event("input",{bubbles:!0})),await delay(100));for(const l of e)a.value+=l,c&&(a.dispatchEvent(new Event("input",{bubbles:!0})),a.dispatchEvent(new KeyboardEvent("keydown",{key:l,bubbles:!0})),a.dispatchEvent(new KeyboardEvent("keypress",{key:l,bubbles:!0})),a.dispatchEvent(new KeyboardEvent("keyup",{key:l,bubbles:!0}))),o>0&&await delay(o);return c&&(a.dispatchEvent(new Event("change",{bubbles:!0})),a.dispatchEvent(new Event("blur",{bubbles:!0}))),console.log("✓ Typed into:",t,`"${e}"`),!0}catch(l){throw console.error("Type failed:",l),l}}async function autoScroll(t,e,r={}){const{smooth:i=!0,behavior:n="smooth"}=r;try{if(t){const o=document.querySelector(t);if(!o)throw new Error(`Element not found: ${t}`);e==="top"?o.scrollTop=0:e==="bottom"?o.scrollTop=o.scrollHeight:o.scrollTop=e}else e==="top"?window.scrollTo({top:0,behavior:n}):e==="bottom"?window.scrollTo({top:document.body.scrollHeight,behavior:n}):window.scrollTo({top:e,behavior:n});return await delay(500),console.log(`✓ Scrolled${t?` ${t}`:""} to:`,e),!0}catch(o){throw console.error("Scroll failed:",o),o}}async function autoWait(t,e={}){const{timeout:r=1e4}=e;if(typeof t=="number")return await delay(t),console.log(`✓ Waited ${t}ms`),!0;if(typeof t=="string"){const i=await waitForSelector(t,r);return console.log("✓ Element appeared:",t),!!i}return!1}async function autoNavigate(t){try{return window.location.href=t,console.log("✓ Navigating to:",t),!0}catch(e){throw console.error("Navigation failed:",e),e}}async function autoExtract(t,e={}){var o;const{attribute:r="textContent",multiple:i=!1,transform:n=null}=e;try{if(i){let u=Array.from(document.querySelectorAll(t)).map(s=>{var w;return r==="textContent"?(w=s.textContent)==null?void 0:w.trim():s[r]});return n&&(u=u.map(n)),console.log(`✓ Extracted ${u.length} items from:`,t),u}const c=document.querySelector(t);if(!c)throw new Error(`Element not found: ${t}`);let a=r==="textContent"?(o=c.textContent)==null?void 0:o.trim():c[r];return n&&(a=n(a)),console.log("✓ Extracted from:",t,a),a}catch(c){throw console.error("Extract failed:",c),c}}async function executeCustomCommand(command){const{value}=command;if(value&&typeof value=="function")return await value();if(value&&typeof value=="string")return eval(value);throw new Error("Invalid custom command")}function waitForSelector(t,e=1e4){return new Promise((r,i)=>{const n=document.querySelector(t);if(n){r(n);return}const o=new MutationObserver(()=>{const a=document.querySelector(t);a&&(o.disconnect(),clearTimeout(c),r(a))});o.observe(document.body,{childList:!0,subtree:!0});const c=setTimeout(()=>{o.disconnect(),i(new Error(`Timeout waiting for selector: ${t}`))},e)})}function delay(t){return new Promise(e=>setTimeout(e,t))}chrome.runtime.onMessage.addListener((t,e,r)=>{if(t.type==="automationCommand")return executeCommand(t.command).then(i=>{r({success:!0,result:i})}).catch(i=>{r({success:!1,error:String(i)})}),!0});window.automationCommands={execute:executeCommand,click:autoClick,type:autoType,scroll:autoScroll,wait:autoWait,navigate:autoNavigate,extract:autoExtract};console.log("✅ Automation commands ready");export{autoClick,autoExtract,autoNavigate,autoScroll,autoType,autoWait,executeCommand};
