(function(){console.log("🚀 eBay automation content script loaded on:",window.location.href);console.log("🕒 Load timestamp:",new Date().toISOString());let b=!1,h=!1;chrome.runtime.onMessage.addListener((s,d,t)=>(console.log("📨 eBay automation received message:",s.type),s.type==="startEbayListing"&&(console.log("🎯 Received startEbayListing trigger!"),console.log("📦 ASIN:",s.asin),console.log("📦 Product Data:",s.productData),x(s.asin,s.productData),t({success:!0,message:"eBay listing automation started"})),!0));async function x(s,d){console.log("🚀 Starting eBay listing automation for ASIN:",s),await new Promise(l=>setTimeout(l,2e3));const t=d.searchTitle||d.title;if(!t){console.error("❌ No title found in product data!");return}console.log("🔎 Searching for:",t),await y(t)?(await chrome.storage.local.set({[`searched_${s}`]:!0,currentAsin:s}),console.log("✅ Search executed successfully for ASIN:",s)):console.error("❌ Failed to execute search for ASIN:",s)}async function y(s){console.log("🔎 Auto-searching eBay for:",s),await new Promise(r=>setTimeout(r,3e3));const t=[".se-search-box .se-search-box__field.textbox input:placeholder-shown",'.se-search-box input[type="text"]','input[name="query"]','input[placeholder*="search" i]','input[type="search"]','input[id*="search"]',"input.search-input","#gh-ac"];console.log("🔍 Searching for search input with selectors...");for(const r of t){const l=document.querySelector(r);if(l&&l.offsetParent!==null){console.log("✅ Found search input with selector:",r),l.focus(),console.log("👆 Focused search input"),l.value="",l.value=s,console.log("📝 Pasted title into search box:",s.substring(0,50)+"..."),l.dispatchEvent(new Event("input",{bubbles:!0})),l.dispatchEvent(new Event("change",{bubbles:!0})),l.style.backgroundColor="#90EE90",setTimeout(()=>{l.style.backgroundColor=""},1e3),await new Promise(n=>setTimeout(n,500)),console.log("⌨️  Pressing Enter to submit search...");const a=new KeyboardEvent("keydown",{key:"Enter",code:"Enter",keyCode:13,which:13,bubbles:!0,cancelable:!0});l.dispatchEvent(a),l.dispatchEvent(new KeyboardEvent("keypress",{key:"Enter",code:"Enter",keyCode:13,which:13,bubbles:!0,cancelable:!0})),l.dispatchEvent(new KeyboardEvent("keyup",{key:"Enter",code:"Enter",keyCode:13,which:13,bubbles:!0,cancelable:!0})),h=!0,console.log("✅ Search submitted with Enter key!");const i=document.createElement("div");return i.style.cssText=`
        position: fixed;
        top: 20px;
        right: 20px;
        background: #28a745;
        color: white;
        padding: 15px 25px;
        border-radius: 8px;
        font-size: 16px;
        font-weight: bold;
        z-index: 999999;
        box-shadow: 0 4px 12px rgba(0,0,0,0.3);
      `,i.textContent=`✓ Searching: ${s.substring(0,40)}...`,document.body.appendChild(i),setTimeout(()=>i.remove(),3e3),!0}}return console.error("❌ Search input not found with any selector!"),!1}async function k(){var a,i,n,u;console.log("🎯 On product identification page, handling automatically..."),console.log("📍 Current URL:",window.location.href),await new Promise(c=>setTimeout(c,2500));const s=((i=(a=document.querySelector("h1"))==null?void 0:a.textContent)==null?void 0:i.trim())||"";console.log("📄 Page title:",s),console.log("🎯 STRATEGY 1: Looking for product card matches...");const d=[".product-button","button.product-button",".card-container__item button",'[class*="product-button"]'];let t=!1;for(const c of d){const e=document.querySelectorAll(c);if(e.length>0){console.log(`✅ Found ${e.length} product cards with selector: ${c}`),console.log("👆 Clicking first product match..."),e[0].click(),t=!0;const o=document.createElement("div");return o.style.cssText=`
        position: fixed;
        top: 20px;
        right: 20px;
        background: #28a745;
        color: white;
        padding: 15px 25px;
        border-radius: 8px;
        font-size: 16px;
        font-weight: bold;
        z-index: 999999;
        box-shadow: 0 4px 12px rgba(0,0,0,0.3);
      `,o.textContent="✓ Selected matching product!",document.body.appendChild(o),setTimeout(()=>o.remove(),3e3),await new Promise(p=>setTimeout(p,2e3)),!0}}t||console.log("⚠️ No product cards found, trying STRATEGY 2..."),console.log('🎯 STRATEGY 2: Looking for "Continue without match" button...');const r=["button.prelist-radix__next-action",".prelist-radix__next-action","button.btn--secondary.prelist-radix__next-action",'button[type="button"].prelist-radix__next-action'];let l=!1;for(const c of r){const e=document.querySelectorAll(c);console.log(`🔍 Selector: ${c} -> Found ${e.length} buttons`);for(const o of e){const p=((n=o.textContent)==null?void 0:n.trim().toLowerCase())||"";if(console.log(`   Button text: "${p}"`),p.includes("continue")||p.includes("without")){console.log('✅ Found "Continue without match" button!'),console.log("   HTML:",o.outerHTML.substring(0,200)),o.scrollIntoView({behavior:"smooth",block:"center"}),await new Promise(g=>setTimeout(g,500)),o.style.cssText+=`
          background: #ff9800 !important;
          border: 3px solid #ff5722 !important;
          transform: scale(1.1);
        `,await new Promise(g=>setTimeout(g,500)),o.click(),console.log('✅ Clicked "Continue without match" button!'),l=!0;const f=document.createElement("div");return f.style.cssText=`
          position: fixed;
          top: 20px;
          right: 20px;
          background: #ff9800;
          color: white;
          padding: 15px 25px;
          border-radius: 8px;
          font-size: 16px;
          font-weight: bold;
          z-index: 999999;
          box-shadow: 0 4px 12px rgba(0,0,0,0.3);
        `,f.textContent="✓ Continuing to listing form...",document.body.appendChild(f),setTimeout(()=>f.remove(),3e3),!0}}if(l)break}if(!l){console.error('❌ Could not find "Continue without match" button'),console.log('🎯 STRATEGY 3: Trying ANY button with "continue" text...');const c=document.querySelectorAll("button, a.btn, a.fake-btn");console.log(`🔍 Found ${c.length} total buttons on page`);for(const e of c){const o=((u=e.textContent)==null?void 0:u.trim().toLowerCase())||"";if(o.includes("continue")||o.includes("next")||o.includes("proceed"))return console.log(`✅ Found button with continue text: "${o}"`),e.scrollIntoView({behavior:"smooth",block:"center"}),await new Promise(p=>setTimeout(p,500)),e.click(),console.log("✅ Clicked button!"),!0}}return console.error("❌ Could not proceed - no continue button found"),!1}async function m(){var l,a;console.log("🎯 Handling condition picker..."),await new Promise(i=>setTimeout(i,1500));const s=['input[type="radio"][value="1000"]','input[name*="condition"][id*="new" i]','input[name*="condition"][value*="new" i]','label:has(input[name*="condition"]):has-text("New")','button[data-value="1000"]','.conditions input[type="radio"]:first-of-type'];let d=!1;for(const i of s){const n=document.querySelector(i);if(n){console.log(`✅ Found "New" condition with selector: ${i}`),n.scrollIntoView({behavior:"smooth",block:"center"}),await new Promise(u=>setTimeout(u,300)),n.click(),n.checked=!0,n.dispatchEvent(new Event("change",{bubbles:!0})),n.dispatchEvent(new Event("click",{bubbles:!0})),console.log('✅ Selected "New" condition!'),d=!0;break}}if(!d){const i=document.querySelectorAll("label");for(const n of i){const u=((l=n.textContent)==null?void 0:l.trim().toLowerCase())||"";if(u==="new"||u.startsWith("new")){console.log('✅ Found "New" condition label'),n.click(),d=!0,await new Promise(c=>setTimeout(c,500));break}}}if(!d){console.warn('⚠️ Could not find "New" condition, trying first radio button...');const i=document.querySelector('input[type="radio"]');i&&(i.click(),i.checked=!0,d=!0,console.log("✅ Selected first available condition"))}await new Promise(i=>setTimeout(i,1e3));const t=['button[type="button"]:has-text("Continue to listing")','button:has-text("Continue")',"button.btn--primary",'button[class*="primary"]','button:has-text("Done")','button:has-text("Next")',".nextAction button",'[class*="nextAction"] button'];let r=!1;for(const i of t){const n=document.querySelectorAll("button");for(const u of n){const c=((a=u.textContent)==null?void 0:a.trim().toLowerCase())||"";if(c.includes("continue")||c.includes("done")||c.includes("next")||c.includes("list"))if(console.log(`✅ Found continue button: "${c}"`),u.disabled)console.warn("⚠️ Continue button is disabled");else{u.scrollIntoView({behavior:"smooth",block:"center"}),await new Promise(o=>setTimeout(o,500)),u.style.cssText+=`
            background: #28a745 !important;
            border: 3px solid #1e7e34 !important;
            transform: scale(1.05);
          `,await new Promise(o=>setTimeout(o,500)),u.click(),console.log("✅ Clicked continue button!"),r=!0;const e=document.createElement("div");return e.style.cssText=`
            position: fixed;
            top: 20px;
            right: 20px;
            background: #28a745;
            color: white;
            padding: 15px 25px;
            border-radius: 8px;
            font-size: 16px;
            font-weight: bold;
            z-index: 999999;
            box-shadow: 0 4px 12px rgba(0,0,0,0.3);
          `,e.textContent="✓ Proceeding to listing form...",document.body.appendChild(e),setTimeout(()=>e.remove(),3e3),!0}}if(r)break}return r?d&&r:(console.error("❌ Could not find or click continue button"),!1)}async function C(){var d,t;console.log("Looking for Create Listing button..."),await new Promise(r=>setTimeout(r,2e3));const s=[".create-listing-btn > a.fake-btn",".create-listing-btn a.fake-btn",".create-listing-btn a.fake-btn:visited",'a.fake-btn[href*="create"]','a.fake-btn[href*="sell"]','button[type="button"]:contains("Create")','a:contains("Create listing")'];for(const r of s){const l=document.querySelectorAll(r);console.log(`Found ${l.length} elements for selector: ${r}`);for(const a of l){const i=((d=a.textContent)==null?void 0:d.toLowerCase())||"",n=((t=a.href)==null?void 0:t.toLowerCase())||"";if(i.includes("create")||i.includes("list")||n.includes("sell")||n.includes("create"))return console.log("✓ Found Create Listing button, clicking...",a),b=!0,a.click(),!0}}return console.log("Create Listing button not found with any selector"),!1}async function w(s){var u;console.log("Auto-filling eBay form with:",s),await new Promise(c=>setTimeout(c,3e3));const d=((u=s.listType)==null?void 0:u.toUpperCase())||"STANDARD";console.log(`Using ${d}-List mode`);let t=0;const r=['input[name*="title"]','input[id*="title"]','textarea[name*="title"]','input[placeholder*="title" i]',"#listings\\.title",'input[data-testid*="title"]'];for(const c of r){const e=document.querySelector(c);if(e&&e.offsetParent!==null&&s.title){e.focus(),e.value=s.title,e.dispatchEvent(new Event("input",{bubbles:!0})),e.dispatchEvent(new Event("change",{bubbles:!0})),e.blur(),console.log("✓ Title filled:",s.title.substring(0,50)+"..."),t++;break}}const l=['textarea[name*="description"]','textarea[id*="description"]','div[contenteditable="true"]','iframe[id*="description"]',"#listings\\.description",'textarea[data-testid*="description"]'];for(const c of l){const e=document.querySelector(c);if(e&&e.offsetParent!==null&&s.description){e.tagName==="TEXTAREA"?(e.focus(),e.value=s.description+`

[${d}-List]`,e.dispatchEvent(new Event("input",{bubbles:!0})),e.dispatchEvent(new Event("change",{bubbles:!0})),e.blur()):e.tagName==="DIV"&&(e.focus(),e.innerText=s.description+`

[${d}-List]`,e.dispatchEvent(new Event("input",{bubbles:!0}))),console.log("✓ Description filled"),t++;break}}if(s.price){const c=['input[name*="price"]','input[id*="price"]','input[placeholder*="price" i]','input[type="number"]','input[data-testid*="price"]'];for(const e of c){const o=document.querySelector(e);if(o&&o.offsetParent!==null){o.focus(),o.value=s.price,o.dispatchEvent(new Event("input",{bubbles:!0})),o.dispatchEvent(new Event("change",{bubbles:!0})),o.blur(),console.log("✓ Price filled:",s.price),t++;break}}}const a=['select[name*="condition"]','select[id*="condition"]','input[name*="condition"][value*="New"]','input[name*="condition"][value="1000"]'];for(const c of a){const e=document.querySelector(c);if(e){if(e.tagName==="SELECT"){const o=e;for(let p=0;p<o.options.length;p++)if(o.options[p].text.toLowerCase().includes("new")){o.selectedIndex=p,o.dispatchEvent(new Event("change",{bubbles:!0})),console.log("✓ Condition set to New"),t++;break}}else e.tagName==="INPUT"&&(e.click(),console.log("✓ Condition set to New"),t++);break}}const i=['input[name*="quantity"]','input[id*="quantity"]','input[placeholder*="quantity" i]'];for(const c of i){const e=document.querySelector(c);if(e&&e.offsetParent!==null){e.focus(),e.value="1",e.dispatchEvent(new Event("input",{bubbles:!0})),e.dispatchEvent(new Event("change",{bubbles:!0})),e.blur(),console.log("✓ Quantity set to 1"),t++;break}}console.log(`✓ eBay form auto-fill complete! Filled ${t} fields (${s.index+1}/${s.total})`);const n=document.createElement("div");n.style.cssText=`
    position: fixed;
    top: 20px;
    right: 20px;
    background: #28a745;
    color: white;
    padding: 15px 25px;
    border-radius: 8px;
    font-size: 16px;
    font-weight: bold;
    z-index: 999999;
    box-shadow: 0 4px 12px rgba(0,0,0,0.3);
  `,n.textContent=`✓ Auto-filled ${t} fields with Amazon data!`,document.body.appendChild(n),setTimeout(()=>n.remove(),5e3)}(async function(){console.log("🔧 Initializing eBay automation..."),console.log("🕒 Init timestamp:",new Date().toISOString()),await new Promise(d=>setTimeout(d,1500)),console.log("⏰ After initial delay"),chrome.storage.local.get(["automationInProgress"],async d=>{if(console.log("📊 Storage check - automationInProgress:",d.automationInProgress),!d.automationInProgress){console.log("⚠️ No automation in progress - exiting");return}if(console.log("✅ Automation in progress confirmed!"),(window.location.href.includes("ebay.com/sl/sell?sr=shListingsCTA")||window.location.href.includes("ebay.com/sl/sell"))&&!h){console.log("🔍 On eBay sell/search page, looking for scraped product data..."),console.log("📍 Current URL:",window.location.href),chrome.storage.local.get(null,async t=>{var l;console.log("📦 Checking storage for scraped products...");const r=Object.keys(t).filter(a=>a.startsWith("scrapedProduct_")&&a.length>20);console.log(`📊 Found ${r.length} ASIN-based scraped products in storage`);for(const a of r){const i=t[a],n=i.asin;if(n&&!t[`searched_${n}`]){console.log(`✅ Found scraped product with ASIN: ${n}`),console.log("� Title:",(l=i.title)==null?void 0:l.substring(0,50));const u=i.searchTitle||i.title;u?(console.log("🎯 Starting auto-search for:",u),await y(u)?(await chrome.storage.local.set({[`searched_${n}`]:!0,currentAsin:n}),console.log("✅ Search executed successfully for ASIN:",n),console.log("⏳ Waiting for search results page to load...")):console.error("❌ Failed to execute search for ASIN:",n)):console.error("❌ No title found in scraped product data!");break}}});return}if(window.location.href.includes("ebay.com/sl/prelist/identify")||window.location.href.includes("ebay.com/sl/prelist")||window.location.href.includes("prelist/identify")){console.log("🎯 On product identification page!"),await new Promise(r=>setTimeout(r,1500)),await k()?(console.log("✅ Product identification completed, waiting for next page..."),await new Promise(r=>setTimeout(r,3e3)),await m()&&console.log("✅ Condition selected, proceeding to listing form...")):console.error("❌ Failed to handle product identification page");return}if(window.location.href.includes("ebay.com/sl/")&&document.querySelector('.conditions, [class*="condition"], [class*="CONDITION"]')){console.log("🎯 On condition selection page!"),await new Promise(t=>setTimeout(t,1e3)),await m()&&console.log("✅ Condition selected, waiting for listing form...");return}if((window.location.href.includes("ebay.com/sl/sell")||window.location.href.includes("ebay.com/sell")||window.location.href.includes("selling/listings"))&&!b&&h&&(console.log("On sell page after search, looking for Create Listing button..."),await C())){console.log("✓ Clicked Create Listing button, waiting for listing form...");return}(window.location.href.includes("ebay.com/sell/create")||window.location.href.includes("ebay.com/sl/list")||window.location.href.includes("ebay.com/sl/create")||window.location.href.includes("ebay.com/list")||b)&&(console.log("✅ On listing creation form! URL:",window.location.href),console.log("📝 Looking for scraped product data..."),chrome.storage.local.get(null,async t=>{var l;const r=t.currentAsin;if(r){const a=`scrapedProduct_${r}`;if(t[a]&&!t[`processed_${r}`]){const i=t[a];console.log(`✅ Found scraped product with ASIN: ${r}`),console.log("📝 Title:",(l=i.title)==null?void 0:l.substring(0,50));try{await w(i),await chrome.storage.local.set({[`processed_${r}`]:!0}),chrome.runtime.sendMessage({type:"itemListed",asin:r,success:!0,message:"Successfully listed: "+i.title}),console.log("✅ Sent itemListed message for ASIN:",r);const n=i.total||1;let u=!0;const c=Object.keys(t).filter(e=>e.startsWith("scrapedProduct_")&&e.length>20).map(e=>t[e].asin).filter(Boolean);for(const e of c)if(!t[`processed_${e}`]){u=!1;break}if(u){console.log("🎉 All products processed, cleaning up...");const e=["automationInProgress","pendingUrls","automationType","automationStep","currentAsin"];for(const o of c)e.push(`scrapedProduct_${o}`),e.push(`searched_${o}`),e.push(`processed_${o}`);for(let o=0;o<n;o++)e.push(`pendingProduct_${o}`),e.push(`scrapedProduct_${o}`),e.push(`searched_${o}`),e.push(`processed_${o}`);chrome.storage.local.remove(e),console.log("🧹 Storage cleaned up")}}catch(n){console.error("❌ Error during form fill:",n),chrome.runtime.sendMessage({type:"itemFailed",asin:r,success:!1,message:"Failed to list: "+n.message})}return}}else{console.warn("⚠️ No currentAsin found in storage, falling back to index-based lookup");for(let a=0;a<100;a++){const i=`scrapedProduct_${a}`;if(t[i]&&!t[`processed_${a}`]){const n=t[i],u=n.asin||`index_${a}`;console.log(`Found scraped product at index ${a}`);try{await w(n),await chrome.storage.local.set({[`processed_${a}`]:!0}),chrome.runtime.sendMessage({type:"itemListed",asin:u,success:!0,message:"Successfully listed: "+n.title})}catch(c){chrome.runtime.sendMessage({type:"itemFailed",asin:u,success:!1,message:"Failed: "+c.message})}return}}}}))})})();
})()
